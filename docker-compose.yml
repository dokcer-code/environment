version: '3'
services:
    nginx:
        build:
            context: docker/build/nginx
        restart: always
        volumes:
            - ./docker/build/nginx/log:/var/log/nginx
        expose:
          - 80
          - 443
        networks:
            self:
                ipv4_address: ${NGINX_HOST}
    php-cli-7.1:
        build:
            context: docker/build/php-cli-7.1/
            args:
                UID: ${USER_ID}
        volumes:
            - ./docker/build/php-cli-7.1/supervisor/log:/var/log/supervisor
            - /home/cheremhovo1990/.ssh:/home/user/.ssh
            - ./docker/build/php-cli-7.1/bash_history/.bash_history:/home/user/.bash_history
            - ./docker/build/php-cli-7.1/cron/log:/var/log/cron
            - /sys/fs/cgroup:/sys/fs/cgroup:ro
            - /sys/fs/fuse:/sys/fs/fuse
        tmpfs:
            - /run
            - /run/lock
        working_dir: /var/www
        networks:
            self:
                ipv4_address: ${PHP_CLI_7_1_HOST}
    php-fpm-7.1:
        build:
            context: docker/build/php-fpm-7.1/
            args:
                UID: ${USER_ID}
        volumes:
            - ./docker/build/php-fpm-7.1/log:/usr/local/var/log/php
            - ./docker/build/php-fpm-7.1/tmp:/tmp/php
        environment:
            CLIENT_HOST: ${CLIENT_HOST}
        working_dir: /var/www
        networks:
            self:
                ipv4_address: ${PHP_7_1_HOST}
    php-fpm-7.2:
        build:
            context: docker/build/php-fpm-7.2/
        networks:
            self:
                ipv4_address: ${PHP_7_2_HOST}
    php-cli-7.3:
        build:
            context: docker/build/php-cli-7.3/
            args:
                UID: ${USER_ID}
        volumes:
            - ./docker/build/php-cli-7.3/supervisor/log:/var/log/supervisor
            - /home/cheremhovo1990/.ssh:/home/user/.ssh
            - ./docker/build/php-cli-7.3/bash_history/.bash_history:/home/user/.bash_history
            - ./docker/build/php-cli-7.3/cron/log:/var/log/cron
            - /sys/fs/cgroup:/sys/fs/cgroup:ro
            - /sys/fs/fuse:/sys/fs/fuse
        tmpfs:
            - /run
            - /run/lock
        working_dir: /var/www
        networks:
            self:
                ipv4_address: ${PHP_CLI_7_3_HOST}
    php-fpm-7.3:
        build:
            context: docker/build/php-fpm-7.3/
            args:
                UID: ${USER_ID}
        environment:
            CLIENT_HOST: ${CLIENT_HOST}
        volumes:
            - ./docker/build/php-fpm-7.3/log:/usr/local/var/log/php
            - ./docker/build/php-fpm-7.3/tmp:/tmp/php
        working_dir: /var/www
        networks:
            self:
                ipv4_address: ${PHP_7_3_HOST}
    php-cli-7.4:
        build:
            context: docker/build/php-cli-7.4/
            args:
                UID: ${USER_ID}
        restart: always
        volumes:
            - ./docker/build/php-cli-7.4/supervisor/log:/var/log/supervisor
            - /home/cheremhovo1990/.ssh:/home/user/.ssh
            - ./docker/build/php-cli-7.4/bash_history/.bash_history:/home/user/.bash_history
            - ./docker/build/php-cli-7.4/cron/log:/var/log/cron
            - /sys/fs/cgroup:/sys/fs/cgroup:ro
            - /sys/fs/fuse:/sys/fs/fuse
        tmpfs:
            - /run
            - /run/lock
        working_dir: /var/www
        networks:
            self:
                ipv4_address: ${PHP_CLI_7_4_HOST}
    php-fpm-7.4:
        build:
            context: docker/build/php-fpm-7.4/
            args:
                UID: ${USER_ID}
        restart: always
        volumes:
            - ./docker/build/php-fpm-7.4/log:/usr/local/var/log/php
            - ./docker/build/php-fpm-7.4/tmp:/tmp/php
        environment:
            CLIENT_HOST: ${CLIENT_HOST}
        working_dir: /var/www
        networks:
            self:
                ipv4_address: ${PHP_7_4_HOST}
    mysql-8:
        build:
            context: docker/build/mysql-8/
        restart: always
        volumes:
            - ./docker/server/mysql-8:/var/lib/mysql
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        networks:
            self:
                ipv4_address: ${MYSQL_8_HOST}
    mysql-5.7:
        build:
            context: docker/build/mysql-5.7/
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        volumes:
            - ./docker/server/mysql-5.7:/var/lib/mysql
        networks:
            self:
                ipv4_address: ${MYSQL_5_7_HOST}
    mysql-5.6:
        image: mysql:5.6
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        volumes:
            - ./docker/server/mysql-5.6:/var/lib/mysql
        networks:
            self:
                ipv4_address: ${MYSQL_5_6_HOST}
#    node:
#        build:
#            context: ./docker/build/node
#        networks:
#            self:
#                ipv4_address: ${NODE_HOST}
#        working_dir: /var/www/
#        expose:
#            - 8890
    redis:
        image: redis:5.0
        restart: always
        networks:
            self:
                ipv4_address: ${REDIS_HOST}
    rabbitmq:
        image: rabbitmq:3.7-management
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
        networks:
            self:
                ipv4_address: ${RABBIT_MQ_HOST}
    mailhog:
        restart: always
        image: mailhog/mailhog
        ports:
            - 1025
            - 8025
        networks:
            self:
                ipv4_address: ${MAILHOG_HOST}
networks:
    self:
        driver: bridge
        ipam: 
            config:
                - subnet: ${NETWORK_SUBNET}            
